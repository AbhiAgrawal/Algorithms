# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    ###exactly same as https://leetcode.com/problems/binary-tree-level-order-traversal/  
    def zigzagLevelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if root is None:
            return []
        
        levels = defaultdict(list)
        
        queue = deque()
        level_length = 0
        level = 0
        queue.append([root,1])
        while queue:
            node,level = queue.popleft()
            levels[level].append(node.val)
            for child in [node.left,node.right]:
                    if child:
                        queue.append([child,level+1])
        output=[]
        count=1
        while len(levels[count]) !=0:
            if count%2 == 0:
                output.append(levels[count][::-1])
            else:
                output.append(levels[count])
            count+=1      
        return output
            
            
        
