# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxDepth(self, root: Optional[TreeNode]) -> int:

        #https://leetcode.com/problems/maximum-depth-of-binary-tree/editorial/
        stack = []
        if root is not None:
            stack.append([1,root])
        depth = 0    
        while stack != []:
            curr_depth, root = stack.pop()
            if root is not None:
                depth = max(curr_depth,depth)
                stack.append([1+curr_depth, root.left])
                stack.append([1+curr_depth, root.right])
        return depth  
