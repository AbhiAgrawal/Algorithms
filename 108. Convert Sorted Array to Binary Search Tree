# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
##https://leetcode.com/problems/balance-a-binary-search-tree/
class Solution:
    def sortedArrayToBST(self, nums: List[int]) -> Optional[TreeNode]:
        
        def constructBST(nums):
            if not nums:
                return None
            mid = len(nums)//2
            root = TreeNode(nums[mid])
            root.left = constructBST(nums[:mid])
            root.right = constructBST(nums[mid+1:])
            return root
        return constructBST(nums)
        
