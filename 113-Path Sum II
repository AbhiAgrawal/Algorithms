# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    #https://leetcode.com/problems/path-sum-ii/solutions/2305359/python-3-dfs-easy/
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:
        if root is None:
            return []
        ans=[]

        def dfs(node, res):

            if node.left is None and node.right is None and sum(res) == targetSum:
                ans.append(res)                    
            if node.left:
                dfs(node.left, res+[node.left.val])
            if node.right:
                dfs(node.right,res+[node.right.val])
        dfs(root,[root.val])    
        return ans
