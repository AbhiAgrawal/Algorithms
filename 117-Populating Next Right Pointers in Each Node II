"""
# Definition for a Node.
class Node:
    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):
        self.val = val
        self.left = left
        self.right = right
        self.next = next
"""

class Solution:
    ##exact same solution as https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/
    def connect(self, root: 'Node') -> 'Node':
        result=[]
        q = deque()
        q.append(root)
        while len(q) != 0:
            level=[]
            for i in range(len(q)):
                node = q.popleft()
                if node is not None:
                    level.append(node)
                    q.append(node.left)
                    q.append(node.right)
            if len(level) != 0:
                result.append(level)

        for row in range(len(result)):
            for i in range(len(result[row]) - 1): ##we dont have to do last node of the level as it will point to None
                result[row][i].next = result[row][i+1]

        return root
