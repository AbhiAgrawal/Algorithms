class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        dictionary = dict()
        if len(prices) <= 1:
            return 0
        maximum = -math.inf        
        for i in range(len(prices)-1,0,-1):
            maximum = max(maximum, prices[i])
            dictionary[i] = maximum
        max_diff = 0
        for i in range(len(prices)-1):
            max_diff = max(max_diff, dictionary[i+1] - prices[i])
            
        return max_diff
    


class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        #https://www.youtube.com/watch?v=1pkOgXD63yU
        l, r = 0,1
        max_profit = 0
        if len(prices) <=1:
            return max_profit
        while(r < len(prices)):
            if prices[r]<=prices[l]:
                l,r = r,r+1
            else:
                max_profit = max(max_profit,prices[r]-prices[l])
                r=r+1
        return max_profit       
