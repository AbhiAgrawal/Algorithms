class Solution:
    def minAvailableDuration(self, slots1: List[List[int]], slots2: List[List[int]], duration: int) -> List[int]:
        ###leetcode solution is nicely explained
#         Iterate until pointer1 reaches the end of slots1 or pointer2 reaches the end of slots2:
# Find the common slot of slots1[pointer1] and slots2[pointer2].
# If the common slot is greater than or equal to duration, return the result.
# Else, find the slot that ends earlier and move the pointer.

        slots1.sort()
        slots2.sort()
        
        pt1 = 0
        pt2 = 0
        
        while pt1 < len(slots1) and pt2 < len(slots2):
            commonslot = [max(slots1[pt1][0],slots2[pt2][0]), min(slots1[pt1][1],slots2[pt2][1])]
            if commonslot[1]-commonslot[0]>=duration:
                return [commonslot[0],commonslot[0]+duration]
            elif slots1[pt1][1] < slots2[pt2][1]:
                pt1+=1
            else:##slots1[pt1][1] > slots2[pt2][1]:
                pt2+=1
                
        return []        
         
