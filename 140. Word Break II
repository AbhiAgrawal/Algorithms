class Solution:

    def wordBreak(self, s: str, wordDict: List[str]) -> List[str]:
        
        # quick check on the characters,
        #   otherwise it would exceed the time limit for certain test cases.
        ### below if checks if there is a character which is not in wordDict.. its like checking size
        ###print(set(Counter(s).keys()))
        ###print(set(Counter("".join(wordDict)).keys()))
        if set(Counter(s).keys()) > set(Counter("".join(wordDict)).keys()):
            return []

        wordSet = set(wordDict) ###for easy look up

        dp = [[]] * (len(s)+1)
        dp[0] = [""]
        

        for endIndex in range(1, len(s)+1):
            sublist = []
            # fill up the values in the dp array.
            for startIndex in range(endIndex):
                word = s[startIndex:endIndex]
                if word in wordSet:
                    for subsentence in dp[startIndex]:
                        sublist.append((subsentence + ' ' + word).strip())

            dp[endIndex] = sublist
        #print(dp)
        return dp[len(s)]
        
