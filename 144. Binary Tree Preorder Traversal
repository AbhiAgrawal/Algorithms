# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def preorderTraversal(self, root: Optional[TreeNode]) -> List[int]:
        stack=[]
        res=[]
        if root is None:
            return res
        stack.append(root)
        while stack:
            curr = stack.pop()
            res.append(curr.val)
            if curr.right:
                stack.append(curr.right)
            if curr.left:
                stack.append(curr.left)
        return res        
        
        
        ###easy preorder traversal
#         arr=[]
#         if root is None:
#             return arr
        
#         def preorder(root):
#             nonlocal arr
#             if root is None:
#                 return
            
#             arr.append(root.val)  
#             if root.left:
#                 preorder(root.left)
#             if root.right:
#                 preorder(root.right)
#         preorder(root)
#         return arr
        
