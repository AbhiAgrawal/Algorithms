class Solution:
    def lengthOfLongestSubstringTwoDistinct(self, st: str) -> int:
        #### same as https://leetcode.com/problems/longest-substring-with-at-most-k-distinct-characters/solution/ with  K =2
          k=2
          countMap = {}
          right  = 0
          left = 0
          result_max = 0
          for s in st:
            if s in countMap:
              countMap[s] += 1
            else:
               countMap[s] = 1
            right += 1 

            while(len(countMap) > k):
              val = countMap[st[left]]
              if val == 1:
                del countMap[st[left]]
              else:
                countMap[st[left]] -=1
              left += 1  
            result_max = max(result_max, right-left)
          return   result_max
        
