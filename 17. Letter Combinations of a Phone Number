class Solution:
    ###https://leetcode.com/problems/letter-combinations-of-a-phone-number/discuss/8063/Python-solution
    def letterCombinations(self, digits: str) -> List[str]:
        mapping={'2':'abc','3':'def','4':'ghi','5':'jkl','6':'mno','7':'pqrs','8':'tuv','9':'wxyz'}
        
        
        def lettercomb(digits):
            if digits=="":
                return []
            elif len(digits) == 1:
                return list(mapping[digits[0]])
            
            sub_list = lettercomb(digits[:-1]) ##from 0 till end expcept last
            additional = mapping[digits[-1]] ##only last
            ##combining the two 
            return [s + c for s in sub_list for c in additional]
            ##above line is similar to below 5 lines
            # new_list = []
            # for s in sub_list:
            #     for a in additional:
            #         new_list.append(s+a)
            # return new_list 
            
            
            
        return lettercomb(digits)    
        
        
        
