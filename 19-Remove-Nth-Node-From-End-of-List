# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        
        ### 2 pass is easy.. in one pass calc the length in second pass reach till length - n
        
        ## for pass we need 2 pointers. one pointer is ahead of second pointer by n nodes
        if head.next is None:
            return None      
        
        first = head
        second = head  
        
        for i in range(1, n+2):
            
            if(first is None):
                #first item is getting removed
                return head.next
            first = first.next
            
          
        
        while(first is not None):
            first = first.next
            second = second.next
            
        second.next = second.next.next
        return head
            
        
        
        
