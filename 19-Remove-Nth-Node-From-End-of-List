# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        
        ### 2 pass is easy.. in one pass calc the length in second pass reach till length - n
        
        ## for pass we need 2 pointers. one pointer is ahead of second pointer by n nodes
        slow, fast = head, head

        for i in range(n):
            fast = fast.next

        if not fast:
            return head.next    

        while fast.next:
            slow, fast = slow.next, fast.next
        slow.next = slow.next.next
        return head    
            
        
        
        
