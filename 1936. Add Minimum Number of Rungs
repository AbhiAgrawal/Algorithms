class Solution:
    ##nice question but easy.. corner case 1st item should also be checked and also check the -1 thing that we are doing
    def addRungs(self, rungs: List[int], dist: int) -> int:
        count=0
        if rungs is None or len(rungs) == 0 or dist == 0:
            return 0
        count=((rungs[0]-1)//dist)
        for i in range(1,len(rungs)):
            diff = rungs[i] - rungs[i-1]
            count+=(diff - 1)//dist
        return count    
        
        
        
