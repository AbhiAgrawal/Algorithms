# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    ###same as level order traversal
    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        levels = []
        if root is None:
            return []
        level_length = 0
        level = 0
        queue = deque()
        queue.append(root)
        result = []
        while queue:
            level_length = len(queue)
            levels.append([])     
            for i in range(level_length):
                node = queue.popleft()
                levels[level].append(node.val)
                
                
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            level+=1
        
        
        #####below is the only change
        for list in levels:
            result.append(list[-1])
        return result    
            
        
        
