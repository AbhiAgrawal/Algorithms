# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    ##typical slow and fast pointers
    def deleteMiddle(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head.next is None:
            return None
        if head.next.next is None:
            return ListNode(head.val, None)
        prev=None
        fast,slow=head,head
        while fast is not None and fast.next is not None:
            fast=fast.next.next
            prev=slow
            slow=slow.next
            
        prev.next=slow.next
        return head
        
