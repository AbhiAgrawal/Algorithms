# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        if l1 is None:
            return l2
        if l2 is None:
            return l1
        
        #we will use l1 as the list to modify and create merged list
        if l1.val >l2.val:
            temp = l1
            l1 = l2
            l2=temp
            
        final_head = l1
        prev = l1
        l1 = l1.next
        
        while l1 is not None and l2 is not None:
            if l1.val > l2.val:
                prev.next = l2
                l2 = l2.next
                prev = prev.next
            else :
                prev.next = l1
                l1 = l1.next
                prev = prev.next
        
        if l1 is not None:
            prev.next = l1
        else:
            prev.next = l2
        return final_head    
        
