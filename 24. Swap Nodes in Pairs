# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
##same as https://leetcode.com/problems/reverse-nodes-in-k-group/ with k==2
###https://leetcode.com/problems/swap-nodes-in-pairs/discuss/171788/Python-or-Dummynode
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:   
        if not head or not head.next: ###single node
            return head
        new_start = head.next.next
        head, head.next = head.next, head ###swap head and head.next.. 
        head.next.next = self.swapPairs(new_start)
        return head
       
