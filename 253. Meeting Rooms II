class Solution:
    ##chec leetcode solution v simple
    def minMeetingRooms(self, intervals: List[List[int]]) -> int:
        
        intervals.sort()
        max_count=1
        
        pq=[] ##will store number of rooms
        heapq.heappush(pq,intervals[0][1])
        for i in range(1,len(intervals)):
            start, end = intervals[i]
            if pq[0]<=start:
                heapq.heappop(pq)
            heapq.heappush(pq,end)    
        return len(pq)        


###Below neetcode solution is best and easy to understand

class Solution:
    ###best solution https://www.youtube.com/watch?v=FdzJmTCVyJU
    #TC nlogn SC O(n)
    def minMeetingRooms(self, intervals: List[List[int]]) -> int:
        start = sorted([i[0] for i in intervals])
        end = sorted([i[1] for i in intervals])

        res,count = 0,0
        s=e=0
        while s<len(intervals):
            if start[s]<end[e]:
                count+=1
                s+=1
            else:
                count-=1
                e+=1
            res=max(res,count)
        return res             
            
