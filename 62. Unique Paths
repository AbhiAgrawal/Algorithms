class Solution:
    ##combination of (m+n-2,n-1) or combination of (m+n-2,n-1)
    ### https://leetcode.com/problems/unique-paths/solutions/3994523/98-83-easy-dp-math/?envType=list&envId=rymiu6e5 solution 3
    def uniquePaths1(self, m: int, n: int) -> int:
        return comb(m+n-2,n-1)

    ##check editorial 
    def uniquePathsRecursive(self, m: int, n: int) -> int:
        if m==1 or n==1:
            return 1
            
        return self.uniquePaths(m-1,n)+self.uniquePaths(m,n-1)    


    ###iterative   
    def uniquePaths(self, m: int, n: int) -> int:
        DP = [[1 for _ in range(n)] for _ in range(m)]
        for i in range(1,m):
            for j in range(1,n):
                DP[i][j]=DP[i-1][j]+DP[i][j-1]
        return DP[m-1][n-1]        
