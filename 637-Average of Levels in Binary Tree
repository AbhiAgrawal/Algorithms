# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def averageOfLevels(self, root):
        """
        :type root: TreeNode
        :rtype: List[float]
        """
        levels = []
        if root is None:
            return levels
        level_length = 0
        level = 0
        queue = deque()
        queue.append(root)
        while queue:
            level_length = len(queue)
            levels.append([])     
            for i in range(level_length):
                node = queue.popleft()
                levels[level].append(node.val)
                
                
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            level+=1
            
        average = []
        for list in levels:
            average.append(float(sum(list))/len(list))
            
        return average    
            
