# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    ##same as level order traversal
    def averageOfLevels(self, root: Optional[TreeNode]) -> List[float]:
        q=deque()
        if root is None:
            return []
        result=[]    
        q.append(root)
        while q:
            level=[]
            for i in range(len(q)):
                node = q.popleft()
                if node.left is not None:
                    q.append(node.left)
                if node.right is not None:
                    q.append(node.right)
                level.append(node.val)
            result.append(sum(level)/(len(level))) ##here is the difference average
        return result    
