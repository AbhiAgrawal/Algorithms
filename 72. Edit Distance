class Solution:
    ##i wrote on my own.. jsut see the explanation of leetcode solution
    def minDistance(self, word1: str, word2: str) -> int:
        m = len(word1)
        n = len(word2)
        
        ##corner cases
        if m == 0 and n == 0: return 0
        if m == 0: return n
        if n == 0: return m

        D = [[0 for i in range(n+1)] for j in range(m+1)]
        for i in range(1,m+1): ###first col  i.e "" and "H"
            D[i][0] = i
        for j in range(1,n+1): ##first row i.e "H" and ""
            D[0][j] = j
        
        for i in range(1,m+1):
            for j in range(1,n+1):
                c1 = word1[i-1]
                c2 = word2[j-1]
                if c1 == c2:
                    D[i][j] = D[i-1][j-1]
                else:
                    D[i][j] = 1+min(D[i-1][j],D[i][j-1],D[i-1][j-1])
        print(D)
        return D[m][n]
                
        
