class Solution:
    ##very intuitive
    def intervalIntersection(self, firstList: List[List[int]], secondList: List[List[int]]) -> List[List[int]]:
        if len(firstList) == 0 or len(secondList) == 0:
            return []
        n1 = len(firstList)
        n2 = len(secondList)
        output=[]
        
        #pair1 = firstList[0], pair2 = secondList[0]
        i,j=0,0
        while i<n1 and j<n2:
            s1, e1 = firstList[i]
            s2, e2 = secondList[j]
            if e1<s2:
                i+=1
            elif e2<s1:
                j+=1
            else:
                output.append([max(s1,s2),min(e1,e2)])
                if e1<e2: ###[0,2] and [1,5] [0,2] arr should move next
                    i+=1
                else:
                    j+=1
        return output    
        
