import collections
def solution(S):
    max_count = 1 
    if S is None or len(S) <2:
        return 0
    n = len(S)    
    count = 1
    ##this for loop is just to count max count
    for i in range(1, n):
        if S[i] == S[i-1]:
            count+=1 
        else:
            max_count = max(max_count, count)
            count=1
    max_count = max(max_count, count) ##for final run ex: [babaaaaaa]
    result = 0
    count=1 
    ##calculate total insertions for each
    for i in range(1, n): 
        if S[i] == S[i-1]:
            count+=1
        else:
            result+=(max_count-count)
            count = 1
    result+=(max_count-count)        
    return result        
    
        
     
    
print(solution("babaaaaaa"))    
        
        
input string contains 'a' and 'b'. blocks are defined as contiguos elements which have same alphabets. eg, i/p babaa has 4 blocks b, a, b, aa.
number of inserts required to make all blocks of equal length.
