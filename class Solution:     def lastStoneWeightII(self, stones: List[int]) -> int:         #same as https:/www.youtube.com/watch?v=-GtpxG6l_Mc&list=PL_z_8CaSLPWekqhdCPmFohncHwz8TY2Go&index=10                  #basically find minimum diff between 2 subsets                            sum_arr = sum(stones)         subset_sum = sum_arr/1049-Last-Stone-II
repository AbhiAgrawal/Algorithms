class Solution:
    def lastStoneWeightII(self, stones: List[int]) -> int:
        #same as https://www.youtube.com/watch?v=-GtpxG6l_Mc&list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go&index=10
        
        #basically find minimum diff between 2 subsets 
        
        
        sum_arr = sum(stones)
        subset_sum = sum_arr // 2
        
        n = len(stones)
        
        if n == 1:
            return stones[0]
        
        
        DP = [[False for i in range(subset_sum+1)] for j in range(n+1)]
        DP[0][0] = True
        for i in range(n+1):
            curr = stones[i-1]
            for j in range(subset_sum+1):
                if j == 0:
                    DP[i][j] = True
                elif i == 0:
                    DP[i][j] = False
                else:
                    if(j<curr):
                        DP[i][j] = DP[i-1][j]
                    else:
                        DP[i][j] = DP[i-1][j] or DP[i-1][j - curr]
         
        for j in range(subset_sum,0,-1):
            if DP[n][j]:
                return (sum_arr - j) - j
                        
        
        
